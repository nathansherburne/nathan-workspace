source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_yearly.R')
plot(state_yearly_totals[[1]],type="l",col="black",xlab="year",ylab="cases",xaxt='n', ylim=range(state_yearly_totals), xlim=c(0,nyears))
state_yearly_totals[[1]]
state_names
plot(state_yearly_totals[[4]],type="l",col="black",xlab="year",ylab="cases",xaxt='n', ylim=range(state_yearly_totals), xlim=c(0,nyears))
plot(state_yearly_totals[[4]],type="l",col="black",xlab="year",ylab="cases",xaxt='n', ylim=range(state_yearly_totals[[4]]), xlim=c(0,nyears))
axis(side = 1, at = 1:nyears, lab=year_ticks)
state_yearly_totals[[4]]
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
state.df
state.df[1:12,]
split(state.df,5)
ceiling(seq_along(d)/20)
ceiling(seq_along(c(1,2,3,4,5,6))/20)
split(1:12, c(1,1,1,1,2,2,3,4,4,4,4,4))
length(state.df)
nrows(state.df)
nrow(state.df)
nrow(state.df)/12
rep(1:nrow(state.df)/12, each=12)
rep(1:(nrow(state.df)/12), each=12)
split(state.df,rep(1:(nrow(state.df)/12), each=12))
states.years.df = split(state.df,rep(1:(nrow(state.df)/12), each=12))
states.years.df[992]
states.years.df[[992]]
states.years.df[[992]]$Cases
max(states.years.df[[992]]$Cases)
which(states.years.df[[992]]$Cases == max(states.years.df[[992]]$Cases))
month(10)
states.years.df[[992]]$Cases[which(states.years.df[[992]]$Cases == max(states.years.df[[992]]$Cases))]
state.df[which(states.years.df[[992]]$Cases == max(states.years.df[[992]]$Cases)) + 991*12]
state.df[which(states.years.df[[992]]$Cases == max(states.years.df[[992]]$Cases)) + 991*12,]
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
state_yearly_peaks
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
state_yearly_peaks
state_names
state_yearly_peaks[state_names[1]]
which(state_yearly_peaks$State == [state_names[1]])
which(state_yearly_peaks$State == state_names[1])
unique(state.df$State)
state_names_latOrd = unique(state.df$State)
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
lonlat
state_names
rownames(lonlat)
state_names = unique(MexData$State)
state_names
state_names = unique(state.df$State)
state_names
lonlat
state_names = unique(state.df$State)
state_names
rownames(lonlat)
as.character(state_names)
diff(as.character(state_names), rownames(lonlat))
match(as.character(state_names), rownames(lonlat))
rownames(lonlat)[match(as.character(state_names), rownames(lonlat))]
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
lonlat
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
lonlat
lonlat
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
state_yearly_peaks
state_yearly_peaks$State
which(state_yearly_peaks$State == state_names[1])
state_yearly_peaks[1796,]
source('~/Dropbox (Predictive Science)/LEPR03/nathan/Dengue/Mexico/Code/R/plot_heatmap.R')
which(state_yearly_peaks$State == state_names_latOrd[1])
state_yearly_peaks[which(state_yearly_peaks$State == state_names_latOrd[1]),]
state_peaks = all_states_yearly_peaks[which(all_states_yearly_peaks$State == state_names_latOrd[1]]),]
all_states_yearly_peaks = state.df[absolute_peak_indeces,]
state_peaks = all_states_yearly_peaks[which(all_states_yearly_peaks$State == state_names_latOrd[1]),]
state_peaks
unique(state_peaks$Year)
match(unique(state_peaks$Year), state_peaks$Year)
unqPeaks = state_peaks[match(unique(state_peaks$Year), state_peaks$Year),]
unqPeaks
unqPeaks$Cases
library(Hmisc)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "download/")
OUT_DIR = paste0(DATA_DIR, "format/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(OUT_DIR, pattern="INEGI_Exporta_.*.csv")
CSV.filenames
CSV.filenames = list.files(OUT_DIR, pattern="*.csv")
CSV.filenames
CSV.filenames = list.files(DATA_DIR, pattern="INEGI_Exporta_.*.csv")
CSV.filenames
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
read.csv(CSV.filenames[1], stringsAsFactors = FALSE)
library(Hmisc)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "format/")
OUT_DIR = paste0(DATA_DIR, "merge/auxilliary/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(DATA_DIR, pattern="INEGI_Exporta_.*.csv", full.names=TRUE)
CSV.filenames
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
csv.read(CSV.filenames[1])
read.csv(CSV.filenames[1])
read.csv(CSV.filenames[1])
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
years.set = unlist(lapply(CSV.filenames, first.word))
years.set
CSV.filenames
first.word()
first.word(CSV.filenames[1])
CSV.filenames[0]
CSV.filenames[1]
strspplit('.', CSV.filenames[1])
strsplit('.', CSV.filenames[1])
basename(CSV.filenames[1])
first.word(basename(CSV.filenames[1]))
strsplit(first.word(basename(CSV.filenames[1])), '_')
unlist(strsplit(first.word(basename(CSV.filenames[1])), '_'))
unlist(strsplit(first.word(basename(CSV.filenames[1])), '[_]'))
unlist(strsplit(first.word(basename(CSV.filenames[1])), '[.]'))
unlist(strsplit(basename(CSV.filenames[1]), '_'))
unlist(strsplit(basename(CSV.filenames[1]), '_'))[3]
unlist(strsplit(basename(CSV.filenames[1]), '.'))
unlist(strsplit(basename(CSV.filenames[1]), '[.]'))
name = unlist(strsplit(basename(CSV.filenames[1]), '[.]'))[0]  # Basename no ext
name
name = unlist(strsplit(basename(CSV.filenames[1]), '[.]'))[1]  # Basename no ext
name
strsplit(name, '[_]')[3]
strsplit(name, '[_]')
unlist(strsplit(name, '[_]'))[3]
library(Hmisc)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "format/")
OUT_DIR = paste0(DATA_DIR, "merge/auxilliary/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(DATA_DIR, pattern="INEGI_Exporta_.*.csv", full.names=TRUE)
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(CSV.filenames[1]), '[.]'))[0]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
CSV.dfs = mapply(addYearCol, CSV.dfs, years.set, SIMPLIFY = FALSE)
CSV.dfs
years.set
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(CSV.filenames[1]), '[.]'))[0]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
years.set
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(filename), '[.]'))[0]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
years.set
lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(filename), '[.]'))[0]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
})
CSV.filenames
filename = CSV.filenames[1]
name = unlist(strsplit(basename(filename), '[.]'))[0]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
year
name
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(filename), '[.]'))[1]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
years.set
CSV.dfs = mapply(addYearCol, CSV.dfs, years.set, SIMPLIFY = FALSE)
CSV.dfs
lapply(removeTotals, CSV.dfs)
lapply(CSV.dfs, removeTotals)
warnings()
unlist(lapply(CSV.dfs, removeTotals))
CSV.dfs = lapply(CSV.dfs, removeTotals)
df.ALL = do.call(rbind, CSV.dfs)
df.ALL
CSV.filenames = list.files(DATA_DIR, pattern="INEGI_Exporta_.*.csv", full.names=TRUE)
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(filename), '[.]'))[1]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
CSV.dfs
CSV.filenames = list.files(DATA_DIR, pattern="INEGI_Exporta_.*.csv", full.names=TRUE)
CSV.dfs = lapply(CSV.filenames, function(file) read.csv(file, stringsAsFactors = FALSE))
years.set = unlist(lapply(CSV.filenames, function(filename) {
name = unlist(strsplit(basename(filename), '[.]'))[1]  # Basename no ext
year = unlist(strsplit(name, '[_]'))[3]
return(year)
}))
CSV.dfs
CSV.dfs = mapply(addYearCol, CSV.dfs, years.set, SIMPLIFY = FALSE)
df.ALL = do.call(rbind, CSV.dfs)
df.ALL = df.ALL[ , c('Year', 'State', 'Population')]
df.ALL
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
source('~/nathan/code/lib/R/dengue/mexico/code/R/combine_censuses.R')
library(reshape2)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "convert/")
CSV_OUT_DIR = paste0(DATA_DIR, "merge/cases/")
CSV_DIR = paste0(DATA_DIR, "CSVs/")
CENSUS_DIR = paste0(DATA_DIR, "merge/auxilliary/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
PopData2010 = read.csv(paste0(CENSUS_DIR, "2010_CENSUS_STATE_POP.csv"), stringsAsFactors = FALSE)
MasterCensus = read.csv(paste0(CENSUS_DIR, "master/", "Mexico_Census_1980-2010.csv"), stringsAsFactors = FALSE)
pop.data.all = split(MasterCensus, MasterCensus$Year)
library(reshape2)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "convert/")
CSV_OUT_DIR = paste0(DATA_DIR, "merge/cases/")
CSV_DIR = paste0(DATA_DIR, "CSVs/")
CENSUS_DIR = paste0(DATA_DIR, "merge/auxilliary/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
PopData2010 = read.csv(paste0(CENSUS_DIR, "2010_CENSUS_STATE_POP.csv"), stringsAsFactors = FALSE)
MasterCensus = read.csv(paste0(CENSUS_DIR, "Mexico_Census_1980-2010.csv"), stringsAsFactors = FALSE)
pop.data.all = split(MasterCensus, MasterCensus$Year)
read.csv(paste0(CENSUS_DIR, "Mexico_Census_1980-2010.csv"), stringsAsFactors = FALSE)
library(reshape2)
ROOT_DIR = "~/nathan/data/dengue/mexico/"
DATA_DIR = paste0(ROOT_DIR, "convert/")
CSV_OUT_DIR = paste0(ROOT_DIR, "merge/cases/")
CENSUS_DIR = paste0(ROOT_DIR, "merge/auxilliary/")
LIB_DIR = paste0("~/nathan/code/lib/R/dengue/mexico/code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
PopData2010 = read.csv(paste0(CENSUS_DIR, "2010_CENSUS_STATE_POP.csv"), stringsAsFactors = FALSE)
MasterCensus = read.csv(paste0(CENSUS_DIR, "Mexico_Census_1980-2010.csv"), stringsAsFactors = FALSE)
pop.data.all = split(MasterCensus, MasterCensus$Year)
pop.data.all
CSV.filenames = list.files(CSV_DIR, pattern="*.csv")
CSV.filenames
list.files(DATA_DIR, pattern="*.csv")
CSV.filenames = list.files(DATA_DIR, pattern="*.csv")
year.set = unlist(lapply(CSV.filenames, function(filename) substr(filename, 1, 4)))
year.set
CSV.data.frames = list()
for(i in 1:length(CSV.filenames)) {
CSV.data.frames[[i]] = read.csv(paste0(DATA_DIR, CSV.filenames[i]), head=TRUE, encoding="UTF-8", stringsAsFactors=FALSE)
colnames(CSV.data.frames[[i]])[1] = "State"
}
CSV.data.frames = lapply(CSV.data.frames, removeTotals)
CSV.data.frames = lapply(CSV.data.frames, formatRownames)
CSV.data.frames = lapply(CSV.data.frames, removeNumericWhitespace)
CSV.data.frames = list()
for(i in 1:length(CSV.filenames)) {
CSV.data.frames[[i]] = read.csv(paste0(DATA_DIR, CSV.filenames[i]), head=TRUE, encoding="UTF-8", stringsAsFactors=FALSE)
colnames(CSV.data.frames[[i]])[1] = "State"
}
CSV.data.frames
CSV.data.frames = lapply(CSV.data.frames, removeTotals)
CSV.data.frames
CSV.filenames = list.files(DATA_DIR, pattern="*.csv")
year.set = unlist(lapply(CSV.filenames, function(filename) substr(filename, 1, 4)))
CSV.data.frames = list()
for(i in 1:length(CSV.filenames)) {
CSV.data.frames[[i]] = read.csv(paste0(DATA_DIR, CSV.filenames[i]), head=TRUE, encoding="UTF-8", stringsAsFactors=FALSE)
colnames(CSV.data.frames[[i]])[1] = "State"
}
CSV.data.frames
read.csv(paste0(DATA_DIR, CSV.filenames[1]), head=TRUE, encoding="UTF-8", stringsAsFactors=FALSE)
read.csv(paste0(DATA_DIR, CSV.filenames[31]), head=TRUE, encoding="UTF-8", stringsAsFactors=FALSE)
