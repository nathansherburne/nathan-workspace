#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/paho/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/converted_from_PDF/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/cumulative/")
LIB_DIR = paste0(ROOT_DIR, "code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = CSV.filenames[with(details, order(as.POSIXct(mtime)))]
CSV.filenames
ALL_CSV_df = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c("")))  # Read
ALL_CSV_df
#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/paho/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/converted_from_PDF/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/cumulative/")
LIB_DIR = paste0(ROOT_DIR, "code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = CSV.filenames[with(details, order(as.POSIXct(mtime)))]
CSV.filenames
ALL_CSV_df = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c("")))  # Read
ALL_CSV_df
ALL_CSV_df
lapply(ALL_CSV_df, formatPAHOcsv)
CSV.filenames
ALL_CSV_df_ugly = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c("")))  # Read
ALL_CSV_df_pretty = lapply(ALL_CSV_df_ugly, formatPAHOcsv) # Format (remove 'total' rows, fix column names, etc...)
names(ALL_CSV_df_pretty) = CSV.filenames
ALL_CSV_df_pretty
mapply(function(df, filename) write.csv(df, paste0(CSV_OUT_DIR, filename), row.names = FALSE), ALL_CSV_df_pretty, CSV.filenames)
rm(list=ls())
#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/Americas_by_Country/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/cumulative/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/noncumulative/")
LIB_DIR = paste0(ROOT_DIR, "Code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = rev(CSV.filenames[with(details, order(as.POSIXct(mtime)))])
#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/paho/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/cumulative/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/noncumulative/")
LIB_DIR = paste0(ROOT_DIR, "code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = rev(CSV.filenames[with(details, order(as.POSIXct(mtime)))])
CSV.filenames
ALL_CSV_dfs = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE))
#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/paho/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/cumulative/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/noncumulative/")
LIB_DIR = paste0(ROOT_DIR, "code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = rev(CSV.filenames[with(details, order(as.POSIXct(mtime)))])
ALL_CSV_dfs = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE))
NON_CUMU_df = smapply(getNoncumulativeDf, ALL_CSV_dfs[-length(ALL_CSV_dfs)], ALL_CSV_dfs[-1])
NON_CUMU_df = mapply(getNoncumulativeDf, ALL_CSV_dfs[-length(ALL_CSV_dfs)], ALL_CSV_dfs[-1])
NON_CUMU_df
ALL_CSV_dfs
ALL_CSV_dfs[-length(ALL_CSV_dfs)]
ALL_CSV_dfs[-1]
mapply(function(x,y) print(x), ALL_CSV_dfs[-length(ALL_CSV_dfs)], ALL_CSV_dfs[-1])
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
diff.df
diff.df
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
NON_CUMU_df
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
NON_CUMU_df
CSV.filenames
names(NON_CUMU_df) = CSV.filenames[-length(CSV.filenames)]
NON_CUMU_df
strsplit('_', 'this_is_a_string')
strsplit('this_is_a_string', '_')
unlist(strsplit('this_is_a_string', '_'))
mapply(function(name1, name2) {
temp = unlist(strsplit(name1, '_'))
year = temp[1]
cur_week = temp[3]
prev_week = unlist(strsplit(name2, '_'))[3]
return(pasteo(year, '_EW_', prev_week, '-', cur_week))
}, CSV.filenames[-length(CSV.filenames)], CSV.filenames[-1])
mapply(function(name1, name2) {
temp = unlist(strsplit(name1, '_'))
year = temp[1]
cur_week = temp[3]
prev_week = unlist(strsplit(name2, '_'))[3]
return(paste0(year, '_EW_', prev_week, '-', cur_week))
}, CSV.filenames[-length(CSV.filenames)], CSV.filenames[-1])
mapply(function(name1, name2) {
temp = unlist(strsplit(name1, c('.', '_')))
year = temp[1]
cur_week = temp[3]
prev_week = unlist(strsplit(name2, c('.', '_')))[3]
return(paste0(year, '_EW_', prev_week, '-', cur_week))
}, CSV.filenames[-length(CSV.filenames)], CSV.filenames[-1])
unlist(strsplit(CSV.filenames[1], c('.', '_')))
unlist(strsplit(CSV.filenames[1], '_'))
unlist(strsplit(CSV.filenames[1], ('_', '.')))
unlist(strsplit(CSV.filenames[1], ['_', '.']))
unlist(strsplit(CSV.filenames[1], '[_.]'))
mapply(function(name1, name2) {
temp = unlist(strsplit(name1, '[_.]'))
year = temp[1]
cur_week = temp[3]
prev_week = unlist(strsplit(name2, '[_.]'))[3]
return(paste0(year, '_EW_', prev_week, '-', cur_week))
}, CSV.filenames[-length(CSV.filenames)], CSV.filenames[-1])
mapply(function(name1, name2) {
temp = unlist(strsplit(name1, '[_.]'))
year = temp[1]
cur_week = temp[3]
prev_week = unlist(strsplit(name2, '[_.]'))[3]
return(paste0(year, '_EW_', prev_week, '-', cur_week, '.csv'))
}, CSV.filenames[-length(CSV.filenames)], CSV.filenames[-1])
rm(list=ls())
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
NON_CUMU_df
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
source('~/nathan/Dengue/paho/code/R/clean_CSVs.R')
source('~/nathan/Dengue/paho/code/R/clean_CSVs.R')
source('~/nathan/Dengue/paho/code/R/clean_CSVs.R')
ALL_CSV_df_pretty
ALL_CSV_df_ugly
source('~/nathan/Dengue/paho/code/R/clean_CSVs.R')
source('~/nathan/Dengue/paho/code/R/get_noncumulative.R')
rm(list=ls())
#!/usr/bin/env Rscript
library(data.table)
ROOT_DIR = "~/nathan/Dengue/peru/"
CSV_IN_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/")
CSV_OUT_DIR = paste0(ROOT_DIR, "data/CSVs/weekly/")
LIB_DIR = paste0(ROOT_DIR, "code/R/")
source(paste0(LIB_DIR, "csv_lib.R"))
CSV.filenames = list.files(CSV_IN_DIR, pattern="*.csv")
# Order by date modified
details = file.info(list.files(CSV_IN_DIR, pattern="*.csv", full.names = TRUE))
CSV.filenames = CSV.filenames[with(details, order(as.POSIXct(mtime)))]
CSV.filenames
ALL_CSV_df_ugly = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA")))
ALL_CSV_df_ugly[[1]]
ALL_CSV_df_ugly = lapply(CSV.filenames, function(filename) read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA"), header = FALSE))
ALL_CSV_df_ugly[[1]]
ALL_CSV_df_ugly = lapply(CSV.filenames, function(filename) as.data.table(read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA"), header = FALSE)))
ALL_CSV_df_ugly[[1]]
ALL_CSV_dt_ugly = lapply(CSV.filenames, function(filename) as.data.table(read.csv2(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA"), header = FALSE)))
ALL_CSV_df_ugly[[1]]
dt = ALL_CSV_df_ugly[[1]]
dt[, .SD, .SDcols='V1']
dt[, .SD, .SDcols='V12']
dt[, .SD=1, .SDcols='V12']
dt[, (.SD)=1, .SDcols='V12']
dt[, (.SD):=1, .SDcols='V12']
dt[, (V12):=1, ]
dt[, ("V12"):=1, ]
dt[, "V12":=1, ]
dt[, V12:=1, ]
dt[, V12:=1.3, ]
dt[, V12,]
dt
dt[, V12:=1.3, ]
dt[, V12:=1.4, ]
dt
dt[,.SD, .SDcols="V12"]
unique(dt[,.SD, .SDcols="V12"])
ALL_CSV_dt_ugly = lapply(CSV.filenames, function(filename) as.data.table(read.csv2(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA"), header = FALSE, dec=",")))
ALL_CSV_dt_ugly[1]
ALL_CSV_dt_ugly = lapply(CSV.filenames, function(filename) as.data.table(read.csv(paste0(CSV_IN_DIR, filename), stringsAsFactors = FALSE, na.strings=c(""," ", "NA"), header = FALSE, dec=",")))
ALL_CSV_dt_ugly[1]
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_df_pretty
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
CSV.filenames
dt
dt = ALL_CSV_dt_pretty[1]
dt
dt[, .SD, .SDcols=(Department, Province, Confirmed.PreW, Probable.PreW, Discarded.PreW)]
dt[, .SD, .SDcols=.(Department, Province, Confirmed.PreW, Probable.PreW, Discarded.PreW)]
dt[, .SD, .SDcols=c("Department", "Province", "Confirmed.PreW", "Probable.PreW", "Discarded.PreW")]
dt[, .SD, ,.SDcols=c("Department", "Province", "Confirmed.PreW", "Probable.PreW", "Discarded.PreW")]
dt[, .SD, .SDcols=c("Department", "Province", "Confirmed.PreW", "Probable.PreW", "Discarded.PreW")]
cols =c("Department", "Province", "Confirmed.PreW", "Probable.PreW", "Discarded.PreW")
cols
cols =c("Department", "Province", "District", "Confirmed.PreW", "Probable.PreW", "Discarded.PreW")
dt[, .SD, .SDcols=cols]
dt[, .SD, .SDcols=Department:Discarded.PreW]
dt
dt[, .SD, .SDcols="Department":"Discarded.PreW"]
dt[, cols]
dt[, ..cols]
dt[, cols, with=FALSE]
dt
dt = ALL_CSV_dt_pretty[[1]]
dt
dt[, ..cols]
11093/10
57*100000/76.7
57*100000/76.7*3
11093/8
11093/2
11093/12
1/6841
100000/6841
1300000/17058
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_df_pretty
ALL_CSV_dt_pretty
unlist(ALL_CSV_dt_pretty)
ALL_CSV_dt_pretty
do.call(c, unlist(ALL_CSV_dt_pretty, recursive=FALSE))
ALL_CSV_dt_pretty
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
library(plyr)
llply(ALL_CSV_dt_pretty, unlist)
ALL_CSV_dt_pretty
ALL_CSV_dt_pretty[[1]]
ALL_CSV_dt_pretty[[1]][[1]]
rm(list=ls())
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
rm(list=ls())
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
names(ALL_CSV_dt_pretty_nested) = CSV.filenames
ALL_CSV_dt_pretty_nested
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
ALL_CSV_dt_pretty_nested
names(ALL_CSV_dt_pretty_nested[[1]][[1]])
names(ALL_CSV_dt_pretty_nested[[1]])
ALL_CSV_dt_pretty_nested[[1]]
rep(CSV.filenames, each=2)
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
rm(list=ls())
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
ALL_CSV_dt_pretty
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
source('~/nathan/Dengue/peru/code/R/clean_CSVs.R')
